C51 COMPILER V9.54   UI                                                                    02/03/2023 23:29:02 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UI
OBJECT MODULE PLACED IN .\Objects\UI.obj
COMPILER INVOKED BY: E:\Embedded System\51\Keil5\C51\BIN\C51.EXE UI.c OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\UI.lst) TABS(2) OBJECT(.\Objects\UI.obj)

line level    source

   1          #include <reg51.h>
   2          #include <oled.h>
   3          #include <bmp.h>
   4          #include <EEPROM.h>
   5          
   6          void UI_Buy(unsigned char op);
   7          void UI_Start();
   8          
   9          unsigned char UI_score[7] = {0};
  10          unsigned char UI_i,dh=0,dl=0;
  11          bit op_h=1,op_f=0;
  12          extern unsigned char code OD[];
  13          extern unsigned char code CD[];
  14          extern unsigned char code TD[];
  15          extern unsigned char code Meat[];
  16          extern unsigned char code Bone[];
  17          extern unsigned char code Gift[];
  18          
  19          //unsigned char Numlen(unsigned int num)
  20          //{
  21          //  unsigned char len = 1;
  22          //  while(num/=10)++len;
  23          //  return len;
  24          //}
  25          
  26          void Score_show(unsigned char *p)
  27          {
  28   1        unsigned char Score_i,Score_k=0;
  29   1        for (Score_i=0;Score_i<=6;Score_i++){
  30   2          if (p[Score_i]!=0)Score_k=1;
  31   2          if(Score_k)OLED_ShowChar(85+Score_i*6,0,p[Score_i]+'0',1);
  32   2        }
  33   1      }
  34          
  35          void Score_minus(unsigned char *p)
  36          {
  37   1        unsigned char Score_i;
  38   1        for (Score_i=6;Score_i>=1;Score_i--){
  39   2          if (p[Score_i]>10){
  40   3            p[Score_i-1]--;
  41   3            p[Score_i] += 10;
  42   3          }
  43   2        }
  44   1      }
  45          
  46          
  47          
  48          void UI_Continue()
  49          {
  50   1        Delay_50ms(20);
  51   1        for (;;){
  52   2          if (P2 != 0xFF){   //判断任意键是否有被按下 p2 != 11111111
  53   3            OLED_Clear();
  54   3            break;
C51 COMPILER V9.54   UI                                                                    02/03/2023 23:29:02 PAGE 2   

  55   3          }
  56   2          OLED_ShowCHinese(56,6,11); //箭头闪烁
  57   2          Delay_50ms(10);
  58   2          if (P2 != 0xFF){
  59   3            OLED_Clear();
  60   3            break;
  61   3          }
  62   2          OLED_ShowCHinese(56,6,12);
  63   2          Delay_50ms(10);
  64   2        }
  65   1      }
  66          
  67          void UI_Start() //欢迎界面
  68          {
  69   1        for(UI_i=0;UI_i<=4;UI_i++){
  70   2          OLED_ShowCHinese(24+(UI_i<<4),2,UI_i);
  71   2          OLED_ShowCHinese(16+(UI_i<<4),4,UI_i+5); //欢迎语
  72   2        }
  73   1        OLED_ShowCHinese(96,4,10);
  74   1        UI_Continue();
  75   1      }
  76          
  77          void UI_Stop(unsigned char op,unsigned int delta_score)  //停止练琴后显示的
  78          {
  79   1        OLED_Clear();
  80   1        OLED_ShowCHinese(16,3,13);
  81   1        OLED_ShowCHinese(32,3,21);
  82   1        OLED_ShowCHinese(48,3,22);
  83   1        OLED_ShowCHinese(64,3,19);
  84   1        OLED_ShowCHinese(80,3,23);
  85   1        OLED_ShowCHinese(96,3,24);
  86   1        OLED_ShowChar(112,3,':',16);
  87   1      //  OLED_ShowNum(48,5,delta_score,4,16);
  88   1        for (UI_i=0;UI_i<=4;UI_i++){
  89   2          OLED_ShowChar(72-(UI_i<<3),5,delta_score%10+'0',16);
  90   2          delta_score /= 10;
  91   2        }
  92   1        switch (op){
  93   2          case 0:
  94   2            for (UI_i=0;UI_i<=4;UI_i++){
  95   3              OLED_ShowCHinese(24+(UI_i<<4),1,15+UI_i);
  96   3            }
  97   2            break;
  98   2          case 1:
  99   2            OLED_ShowCHinese(32,1,25);
 100   2            OLED_ShowCHinese(48,1,0);
 101   2            OLED_ShowCHinese(64,1,26);
 102   2            OLED_ShowCHinese(80,1,27);
 103   2            OLED_ShowChar(96,1,'~'-66,16);
 104   2            break;
 105   2          case 2:
 106   2            OLED_ShowCHinese(48,1,28);
 107   2            OLED_ShowCHinese(64,1,29);
 108   2            OLED_ShowChar(80,1,'!',16);
 109   2            break;
 110   2          case 3:
 111   2            OLED_ShowCHinese(40,1,30);
 112   2            OLED_ShowCHinese(56,1,31);
 113   2            OLED_ShowCHinese(72,1,19);
 114   2            OLED_ShowChar(88,1,'~'-66,16);
 115   2            break;
 116   2          case 4:
C51 COMPILER V9.54   UI                                                                    02/03/2023 23:29:02 PAGE 3   

 117   2            OLED_ShowCHinese(40,1,32);
 118   2            OLED_ShowCHinese(56,1,33);
 119   2            OLED_ShowCHinese(72,1,19);
 120   2            OLED_ShowChar(88,1,'(',16);
 121   2            break;
 122   2        }
 123   1        Delay_50ms(50);
 124   1        UI_Continue();
 125   1        UI_Start();
 126   1      }
 127          
 128          void UI_Dog()
 129          {
 130   1        unsigned char op_o=1,tmp=0;      //op_h = 0 means dog is hungry, op_f = 1 means already bounght some food
             -,所有函数内变量要在开头定义
 131   1        for (UI_i=0;UI_i<=6;UI_i++){
 132   2          tmp = IAP_ReadByte(0x2800+UI_i);
 133   2          if (tmp!=0xFF){
 134   3            UI_score[UI_i] = tmp;
 135   3          }
 136   2        }
 137   1        if (IAP_ReadByte(0x2C00)!=0xFF)dh = IAP_ReadByte(0x2C00); //2C00 --> doghungry
 138   1        else{dh = 0;}
 139   1        if (IAP_ReadByte(0x2E00)!=0xFF){dl = IAP_ReadByte(0x2E00);} //2E00 --> doglove
 140   1        else{IAP_ProgramByte(0x2E00,20);dl = 20;}
 141   1        if (IAP_ReadByte(0x3000)==1){
 142   2          IAP_EraseSector(0x3000);
 143   2          OLED_ShowCHinese(32,2,13);
 144   2          OLED_ShowCHinese(48,2,42);
 145   2          OLED_ShowCHinese(64,2,43);
 146   2          OLED_ShowCHinese(80,2,19);
 147   2          OLED_ShowCHinese(24,4,25);
 148   2          for (UI_i=0;UI_i<=3;UI_i++){
 149   3            OLED_ShowCHinese(40+(UI_i<<4),4,44+UI_i);
 150   3          }
 151   2          Delay_50ms(20);
 152   2          UI_Continue();
 153   2        }
 154   1        if (dh>=5){
 155   2          op_h = 0;
 156   2          if (dh>=10){
 157   3            OLED_ShowCHinese(56,2,34);
 158   3            OLED_ShowCHinese(72,2,19);
 159   3            OLED_ShowCHinese(88,2,37);
 160   3            OLED_ShowCHinese(104,2,37);
 161   3            OLED_DrawBMP(0,0,50,5,CD);
 162   3          }
 163   2          else{
 164   3            OLED_ShowCHinese(56,2,34);
 165   3            OLED_ShowCHinese(72,2,34);
 166   3            OLED_ShowChar(88,2,'~'-66,16);
 167   3            OLED_DrawBMP(0,0,50,5,OD);
 168   3          }
 169   2        }
 170   1        else{
 171   2          if (dl>=5&&dl<=45){
 172   3            OLED_DrawBMP(0,0,50,5,OD);
 173   3            OLED_ShowCHinese(56,2,13);
 174   3            OLED_ShowCHinese(72,2,35);
 175   3            OLED_ShowCHinese(88,2,36);
 176   3            OLED_ShowChar(104,2,'~'-66,16);
 177   3          }
C51 COMPILER V9.54   UI                                                                    02/03/2023 23:29:02 PAGE 4   

 178   2          else if (dl<5){
 179   3            OLED_ShowCHinese(56,2,37);
 180   3            OLED_ShowCHinese(72,2,37);
 181   3            OLED_DrawBMP(0,0,50,5,CD);
 182   3          }
 183   2          else if (dl>45){
 184   3            OLED_DrawBMP(0,0,50,5,TD);
 185   3            OLED_ShowCHinese(56,2,40);
 186   3            OLED_ShowCHinese(72,2,41);
 187   3            OLED_ShowCHinese(88,2,13);
 188   3            OLED_ShowCHinese(104,2,35);
 189   3          }
 190   2        }
 191   1        while (P2 == 0xFB);
 192   1        for (;;){
 193   2          
 194   2          OLED_DrawBMP(14,5,46,7,Bone);
 195   2          OLED_DrawBMP(60,5,82,7,Meat);
 196   2          OLED_DrawBMP(96,5,111,7,Gift);
 197   2          if (P2 == 0xFD&&op_o<2){op_o++;while(P2 == 0xFD);}
 198   2          else if (P2 == 0xFB&&op_o>0){op_o--;while(P2 == 0xFB);}
 199   2          else if (P2 == 0xF7){while (P2==0xF7);UI_Buy(op_o);}
 200   2          else if (P2 == 0xEF){while(P2 == 0xEF);OLED_Clear();UI_Start();break;}
 201   2          Delay_50ms(8);
 202   2          if (P2 == 0xFD&&op_o<2){op_o++;while(P2 == 0xFD);}
 203   2          else if (P2 == 0xFB&&op_o>0){op_o--;while(P2 == 0xFB);}
 204   2          else if (P2 == 0xF7){while (P2==0xF7);UI_Buy(op_o);}
 205   2          else if (P2 == 0xEF){while(P2 == 0xEF);OLED_Clear();UI_Start();break;}
 206   2          if (op_o==0){
 207   3            OLED_ShowCHinese(14,5,12);
 208   3            OLED_ShowCHinese(30,5,12);
 209   3          }
 210   2          else if (op_o==1){
 211   3            OLED_ShowCHinese(60,5,12);
 212   3            OLED_ShowCHinese(76,5,12);
 213   3          }
 214   2          else if (op_o==2){
 215   3            OLED_ShowCHinese(96,5,12);
 216   3            OLED_ShowCHinese(112,5,12);
 217   3          }
 218   2          Delay_50ms(8);
 219   2        }
 220   1        if ((op_h|op_f)==0){
 221   2          if (dl>=10){
 222   3            dl-=10;
 223   3            IAP_EraseSector(0x2E00);
 224   3            IAP_ProgramByte(0x2E00,dl);
 225   3          }
 226   2        }
 227   1      }
 228          
 229          void UI_Buy(unsigned char op)
 230          {
 231   1        bit k = 0;
 232   1        for (UI_i=0;UI_i<3;UI_i++){
 233   2          if (UI_score[UI_i]!=0){
 234   3            k = 1;
 235   3            break;
 236   3          }
 237   2        }
 238   1        if (op==0){
 239   2          if (UI_score[3]>=2)k=1;
C51 COMPILER V9.54   UI                                                                    02/03/2023 23:29:02 PAGE 5   

 240   2          if (k){
 241   3            op_f = 1;
 242   3            OLED_DrawBMP(0,0,50,5,TD);
 243   3            OLED_ShowCHinese(56,2,38);
 244   3            OLED_ShowCHinese(72,2,38);
 245   3            OLED_ShowCHinese(88,2,13);
 246   3            OLED_ShowCHinese(104,2,36);
 247   3            if (dl<240)dl += 10;
 248   3            else {IAP_ProgramByte(0x3000,1);dl=20;}
 249   3            IAP_EraseSector(0x2E00);
 250   3            IAP_ProgramByte(0x2E00,dl);
 251   3            if (dh>=5)dh -= 5;
 252   3            IAP_EraseSector(0x2C00);
 253   3            IAP_ProgramByte(0x2C00,dh);
 254   3            UI_score[3] -= 2;
 255   3          }
 256   2        }
 257   1        else if (op==1){
 258   2          if (UI_score[3]!=0||UI_score[4]>=5)k=1;
 259   2          if (k){
 260   3            op_f = 1;
 261   3            OLED_DrawBMP(0,0,50,5,TD);
 262   3            OLED_ShowCHinese(56,2,35);
 263   3            OLED_ShowCHinese(72,2,35);
 264   3            OLED_ShowCHinese(88,2,39);
 265   3            OLED_ShowCHinese(104,2,36);
 266   3            if (dl<245)dl += 5;
 267   3            else {IAP_ProgramByte(0x3000,1);dl=20;}
 268   3            IAP_EraseSector(0x2E00);
 269   3            IAP_ProgramByte(0x2E00,dl);
 270   3            if (dh>=5)dh -= 5;
 271   3            IAP_EraseSector(0x2C00);
 272   3            IAP_ProgramByte(0x2C00,dh);
 273   3            UI_score[4] -= 5;
 274   3          }
 275   2        }
 276   1        else if (op==2){
 277   2          if (UI_score[3]>=5)k=1;
 278   2          if(k){
 279   3            op_f = 1;
 280   3            OLED_DrawBMP(0,0,50,5,TD);
 281   3            OLED_ShowCHinese(56,2,38);
 282   3            OLED_ShowCHinese(72,2,38);
 283   3            OLED_ShowCHinese(88,2,40);
 284   3            OLED_ShowCHinese(104,2,41);
 285   3            if (dl<210)dl += 40;
 286   3            else {IAP_ProgramByte(0x3000,1);dl=20;}
 287   3            IAP_EraseSector(0x2E00);
 288   3            IAP_ProgramByte(0x2E00,dl);
 289   3            UI_score[3] -= 5;
 290   3          }
 291   2        }
 292   1        Score_minus(UI_score);
 293   1        for (UI_i=0;UI_i<=7;UI_i++)OLED_ShowChar(127-(UI_i<<2),0,' ',1);
 294   1        Score_show(UI_score);
 295   1        IAP_EraseSector(0x2800);
 296   1        for (UI_i=0;UI_i<=6;UI_i++){
 297   2          IAP_ProgramByte(0x2800+UI_i,UI_score[UI_i]);
 298   2        }
 299   1      }


C51 COMPILER V9.54   UI                                                                    02/03/2023 23:29:02 PAGE 6   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1872    ----
   CONSTANT SIZE    =    888    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
